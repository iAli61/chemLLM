[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chemllm"
version = "0.1.0"
description = "A refactored and optimized training pipeline for chemical language models"
readme = "README.md"
authors = [
    {name = "ChemLLM Team", email = "team@chemllm.ai"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "accelerate>=0.20.0",
    "datasets>=2.10.0", 
    "tiktoken>=0.4.0",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "loguru>=0.7.0",
    "wandb>=0.15.0",
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "pyyaml>=6.0.0",
    "python-dotenv>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0",
    "jupyter>=1.0.0",
    "ipython>=8.0.0",
]
testing = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/iAli61/chemLLM"
Repository = "https://github.com/iAli61/chemLLM"
Documentation = "https://chemllm.readthedocs.io"
"Bug Tracker" = "https://github.com/iAli61/chemLLM/issues"

[project.scripts]
chemllm-config = "chemllm.core.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["chemllm*"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=chemllm --cov-report=term-missing --cov-report=html"
